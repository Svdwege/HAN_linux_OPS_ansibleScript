
- name: sync-clock-at-boot
  become: true
  copy: 
   src: usr/local/sbin/sync-clock-at-boot
   dest: /usr/local/sbin/sync-clock-at-boot
   force: true
   owner: root
   group: root
   mode: u+rwx,g+r,o+r

- name: install basic utils, shells, apps
  community.general.pacman:
    state: present
    name:
      - base-devel
      - chrony
      - chronie
      - git
      - yajl
      - wget 
      - bash-completion
      - atop
      - htop
      - mlocate
      - wget
      - colordiff
      - etc-update

- name: create export in root bashrc
  shell: echo "ansiblebrick" > /etc/hostname
  become: true

- name: create export in root bashrc
  shell: echo "@reboot /usr/local/sbin/sync-clock-at-boot" >>/root/.bashrc
  become: true

- name: create export in root bashrc
  shell: echo "export EDITOR='emacs'" >>/root/.bashrc
  become: true

- name: create cd/etc in root bashrc
  shell: echo "cd /etc" >>/root/.bashrc
  become: true

- name: create git username 
  shell: git config --global user.name "root"
  become: true

- name: create git email 
  shell: git config --global user.email "root@RPI"
  become: true

- name: create git repo /etc
  shell: cd /etc && git init
  become: true

  #- name: create git commit 
  #  shell: cd /etc && pwd && git add /etc/pacman.conf /etc/makepkg.conf && git commit -m "add some files to repo"
  #  become: true

- name: set time and date
  shell: timedatectl set-timezone Europe/Amsterdam && timedatectl status
  become: true

  #- name: create git commit 
  #  shell: cd /etc && git add sudoers && git commit -m "orig sudoers file"
  #  become: true

  #- name: allow sudo | uncomment wheel
  #  become: true
  #  replace:
  #    path: /etc/sudoers
  #    regexp: '{{ item.regexp }}'
  #    replace: '{{ item.replace }}'
  #  with_items:
  #    - { regexp: '^# wheel ALL=(ALL) ALL$', replace: '%wheel ALL=(ALL) ALL' }
  #
  #- name: create git commit 
  #  shell: cd /etc && git add sudoers && git commit -m "modified sudoers file"
  #  become: true

- name: copy bashrc to temp location
  become: true
  copy: 
   src: etc/bash.bashrc
   dest: /tmp/bash.bashrc
   force: true
   owner: root
   group: root

- name:  export man and ls colours
  shell: cat /tmp/bash.bashrc >> /etc/bash.bashrc
  become: true

- name: copy bashrc to temp location
  become: true
  copy: 
   src: root/bashrc
   dest: /root/.bashrc
   force: true
   owner: root
   group: root

- name: copy bashrc to temp location
  become: true
  copy: 
   src: home/opsstudent/bashrc
   dest: /home/opsstudent/.bashrc
   force: true
   owner: opsstudent
   group: opsstudent

- name: setup time and date A24
  shell: timedatectl set-timezone Europe/Amsterdam && timedatectl status
  become: true

- name: Enable pacman colourised output and verbose package lists
  replace:
    path: /etc/pacman.conf
    regexp: '{{ item.regexp }}'
    replace: '{{ item.replace }}'
  with_items:
    - { regexp: '^#Color$', replace: 'Color' }
    - { regexp: 'MAKEFLAGS="-j.*"', replace: 'MAKEFLAGS="-j$(nproc)"' }

- name: setup time and date
  shell: pacman -Ss emacs
  become: false

- name: remove pacnew files
  shell: rm /etc/*.pacnew
  become: true

- name: starting cronie
  ansible.builtin.systemd_service:
    name: cronie
    enabled: true
    state: started


- name: copy wpa_supplicant.conf to etc/wpa_supplicant/wpa_supplicant.conf
  become: true
  copy: 
   src: etc/wpa_supplicant/wpa_supplicant.conf
   dest: /etc/wpa_supplicant/wpa_supplicant.conf
   force: true
   owner: root
   group: root

- name: create aur directory
  file: path=/tmp/tempAUR
        state=directory
        owner={{ username }}
        group={{ username }}

  ## package-query install
- name: download source tarball for package-query
  shell: cd /tmp/tempAUR && wget https://aur.archlinux.org/cgit/aur.git/snapshot/package-query.tar.gz

- name: unpack tarball package-query
  shell: cd /tmp/tempAUR && tar xfz package-query.tar.gz

- name: package-query makepkg
  shell: cd /tmp/tempAUR/package-query && makepkg

- name: install package-query
  become: true
  shell: cd /tmp/tempAUR/package-query && pacman -U package-query*.pkg.tar.xz
  
  ## yaourt install
- name: download source tarball for yaourt
  shell: cd /tmp/tempAUR && wget https://aur.archlinux.org/cgit/aur.git/snapshot/yaourt.tar.gz

- name: unpack tarball yaourt
  shell: cd /tmp/tempAUR && tar xfz yaourt.tar.gz

- name: yaourt makepkg
  shell: cd /tmp/tempAUR/yaourt && makepkg

- name: install yaourt
  become: true
  shell: cd /tmp/tempAUR/yaourt && pacman -U yaourt*.pkg.tar.xz

- name: create git commit 
  shell: cd /etc && git add passwd shadow group gshadow && git commit -m "added files from etc"
  become: true

- name: block user alarm  
  become: true
  shell: usermod -s /usr/sbin/nologin alarm



- name: sensehat i2c_dev modprobe
  shell: modprobe i2c-dev
  become: true

- name: assert existance of i2c-dev
    stat:
    path: /dev/i2c-*
    register: p

- debug:
    msg: "i2c devices exists"
  when: p.stat.exists
- debug:
    msg: "i2c not found"
  when: p.stat.exists == False

- name: sensehat i2c_dev modprobe
  shell: echo "i2c-dev" >> /etc/modules-load.d/raspberrypi.conf
  become: true





